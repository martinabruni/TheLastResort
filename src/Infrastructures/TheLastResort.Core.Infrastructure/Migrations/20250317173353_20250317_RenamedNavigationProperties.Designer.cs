// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheLastResort.Core.Infrastructure.Models;

#nullable disable

namespace TheLastResort.Core.Infrastructure.Migrations
{
    [DbContext(typeof(SqldbThelastresortCoreDevContext))]
    [Migration("20250317173353_20250317_RenamedNavigationProperties")]
    partial class _20250317_RenamedNavigationProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheLastResort.Core.Infrastructure.Models.ApartmentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ManagerPhone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Apartmen__3214EC077D46E4EA");

                    b.ToTable("ApartmentEntity", (string)null);
                });

            modelBuilder.Entity("TheLastResort.Core.Infrastructure.Models.BuildingEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("BuildingType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id")
                        .HasName("PK__Building__3214EC07013ABE50");

                    b.ToTable("BuildingEntity", (string)null);
                });

            modelBuilder.Entity("TheLastResort.Core.Infrastructure.Models.HotelEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__HotelEnt__3214EC07296D956C");

                    b.ToTable("HotelEntity", (string)null);
                });

            modelBuilder.Entity("TheLastResort.Core.Infrastructure.Models.LogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__LogEntit__3214EC073328503B");

                    b.ToTable("LogEntity", (string)null);
                });

            modelBuilder.Entity("TheLastResort.Core.Infrastructure.Models.ReservationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Cancelled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("ReservationType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Reservat__3214EC07F9E6A04E");

                    b.HasIndex("BuildingId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "StartDate" }, "IDX_ReservationEntity_StartDate");

                    b.ToTable("ReservationEntity", (string)null);
                });

            modelBuilder.Entity("TheLastResort.Core.Infrastructure.Models.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__UserEnti__3214EC074A1766AB");

                    b.HasIndex(new[] { "Email" }, "UQ_UserEntity_Email")
                        .IsUnique();

                    b.ToTable("UserEntity", (string)null);
                });

            modelBuilder.Entity("TheLastResort.Core.Infrastructure.Models.ApartmentEntity", b =>
                {
                    b.HasOne("TheLastResort.Core.Infrastructure.Models.BuildingEntity", "Building")
                        .WithOne("ApartmentEntity")
                        .HasForeignKey("TheLastResort.Core.Infrastructure.Models.ApartmentEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ApartmentEntity_BuildingEntity");

                    b.Navigation("Building");
                });

            modelBuilder.Entity("TheLastResort.Core.Infrastructure.Models.HotelEntity", b =>
                {
                    b.HasOne("TheLastResort.Core.Infrastructure.Models.BuildingEntity", "Building")
                        .WithOne("HotelEntity")
                        .HasForeignKey("TheLastResort.Core.Infrastructure.Models.HotelEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HotelEntity_BuildingEntity");

                    b.Navigation("Building");
                });

            modelBuilder.Entity("TheLastResort.Core.Infrastructure.Models.ReservationEntity", b =>
                {
                    b.HasOne("TheLastResort.Core.Infrastructure.Models.BuildingEntity", "Building")
                        .WithMany("ReservationEntities")
                        .HasForeignKey("BuildingId")
                        .IsRequired()
                        .HasConstraintName("FK_ReservationEntity_BuildingEntity");

                    b.HasOne("TheLastResort.Core.Infrastructure.Models.UserEntity", "User")
                        .WithMany("ReservationEntities")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_ReservationEntity_UserEntity");

                    b.Navigation("Building");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheLastResort.Core.Infrastructure.Models.BuildingEntity", b =>
                {
                    b.Navigation("ApartmentEntity");

                    b.Navigation("HotelEntity");

                    b.Navigation("ReservationEntities");
                });

            modelBuilder.Entity("TheLastResort.Core.Infrastructure.Models.UserEntity", b =>
                {
                    b.Navigation("ReservationEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
